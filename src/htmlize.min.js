!function(){var t,r;t=this,r=function(i,s){"use strict";return class{readMarkdownFile(t,r){try{var e=s.resolve(t,r);return i.readFileSync(e,"utf-8")}catch(t){throw new Error("Error reading markdown file: "+t.message)}}markdownToHtml(t){var r,e,i;let s="",l=!1,a="",n=!0;for(r of t.split("\n"))r.startsWith("* ")||r.startsWith("- ")?(l||(l=!0,a="ul",s+=`<${a}>
	`),r=r.substring(2),n?s+=`<li>${r}</li>
`:s+=`	<li>${r}</li>
`,n=!1):/^\d+\./.test(r)?(l||(l=!0,a="ol",s+=`<${a}>
	`),i=(e=r.split(".")).shift(),e=e.join("."),n?s+=`<li value="${i}">${e.trim()}</li>
`:s+=`	<li value="${i}">${e.trim()}</li>
`,n=!1):(l&&(l=!1,s+=`</${a}>

`,n=!0),r.startsWith("#")?(i=r.split(" ")[0].length,e=r.substring(i+1),i=Math.min(i,6),s+=`<h${i}>${e}</h${i}>

`):""!==r.trim()&&(r=r.replace(/(\*\*|__)(.*?)\1/gim,"<b>$2</b>").replace(/(\*|_)(.*?)\1/gim,"<i>$2</i>"),s+=`<p>${r}</p>

`));return l&&(s+=`</${a}>

`),s}}},"function"==typeof define&&define.amd?define(["fs","path"],r):"object"==typeof exports?module.exports=r(require("fs"),require("path")):t.Htmlize=r(t.fs,t.path)}();